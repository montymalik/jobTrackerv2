// app/components/resume/builder/TiptapResumePreview.tsx
'use client';

import React, { useEffect, useRef, useState } from 'react';
import { useEditor, EditorContent } from '@tiptap/react';
import StarterKit from '@tiptap/starter-kit';
import { PageBreak } from './PageBreak';
import './tiptap-preview.css';

interface TiptapResumePreviewProps {
  sections: {
    id: string;
    title: string;
    type: string;
    content: string;
    [key: string]: any;
  }[];
}

const TiptapResumePreview: React.FC<TiptapResumePreviewProps> = ({ sections }) => {
  // Combine all sections' content into one HTML string.
  const computeContentHTML = () => sections.map(section => section.content).join('');

  const initialContent = computeContentHTML();

  // Initialize the TipTap editor in read-only mode.
  const editor = useEditor({
    extensions: [StarterKit, PageBreak],
    content: initialContent,
    editable: false, // read-only mode
  });

  // Update the editor content when sections change so that the preview
  // reflects real-time updates from the left side form.
  useEffect(() => {
    if (editor) {
      const updatedHTML = computeContentHTML();
      editor.commands.setContent(updatedHTML, false);
    }
  }, [sections, editor]);

  // For scaling the preview â€“ assume letter page is 816px wide (8.5" at 96 DPI)
  const BASE_WIDTH = 816;
  const [scale, setScale] = useState(1);
  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    function handleResize() {
      if (containerRef.current) {
        const availableWidth = containerRef.current.clientWidth;
        const newScale = availableWidth < BASE_WIDTH ? availableWidth / BASE_WIDTH : 1;
        setScale(newScale);
      }
    }
    window.addEventListener('resize', handleResize);
    // Call once to initialize
    handleResize();
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  return (
    <div ref={containerRef} className="preview-container">
      <div
        className="scale-wrapper"
        style={{
          transform: `scale(${scale})`,
          transformOrigin: 'top left',
          width: `${BASE_WIDTH}px`,
          height: '1056px', // approx. 11" page height at 96 DPI
        }}
      >
        <EditorContent editor={editor} className="preview-content" />
      </div>
    </div>
  );
};

export default TiptapResumePreview;

